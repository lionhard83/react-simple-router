{
  "manifest": {
    "name": "@apideck/better-ajv-errors",
    "description": "Human-friendly JSON Schema validation for APIs",
    "version": "0.3.3",
    "author": {
      "name": "Apideck",
      "email": "support@apideck.com",
      "url": "https://apideck.com/"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/apideck-libraries/better-ajv-errors"
    },
    "bugs": {
      "url": "https://github.com/apideck-libraries/better-ajv-errors/issues"
    },
    "contributors": [
      {
        "name": "Elias Meire",
        "email": "elias@apideck.com"
      }
    ],
    "main": "dist/index.js",
    "module": "dist/better-ajv-errors.esm.js",
    "typings": "dist/index.d.ts",
    "files": [
      "dist",
      "src"
    ],
    "engines": {
      "node": ">=10"
    },
    "scripts": {
      "start": "tsdx watch",
      "build": "tsdx build",
      "test": "tsdx test",
      "lint": "tsdx lint",
      "prepare": "tsdx build",
      "size": "size-limit",
      "release": "np",
      "analyze": "size-limit --why"
    },
    "husky": {
      "hooks": {
        "pre-commit": "tsdx lint"
      }
    },
    "prettier": {
      "printWidth": 120,
      "singleQuote": true,
      "trailingComma": "es5"
    },
    "size-limit": [
      {
        "path": "dist/better-ajv-errors.cjs.production.min.js",
        "limit": "2 KB"
      },
      {
        "path": "dist/better-ajv-errors.esm.js",
        "limit": "2.5 KB"
      }
    ],
    "devDependencies": {
      "@size-limit/preset-small-lib": "^7.0.8",
      "ajv": "^8.10.0",
      "eslint-plugin-prettier": "^4.0.0",
      "husky": "^7.0.4",
      "np": "^7.6.0",
      "size-limit": "^7.0.8",
      "tsdx": "^0.14.1",
      "tslib": "^2.3.1",
      "typescript": "^4.5.4"
    },
    "peerDependencies": {
      "ajv": ">=8"
    },
    "dependencies": {
      "json-schema": "^0.4.0",
      "jsonpointer": "^5.0.0",
      "leven": "^3.1.0"
    },
    "resolutions": {
      "prettier": "^2.3.0"
    },
    "publishConfig": {
      "registry": "https://registry.npmjs.org",
      "access": "public"
    },
    "keywords": [
      "apideck",
      "ajv",
      "json",
      "schema",
      "json-schema",
      "errors",
      "human"
    ],
    "_registry": "npm",
    "_loc": "/Users/carloleonardi/Documents/workspace/React/sample-routing/@mui/material/v6/npm-@apideck-better-ajv-errors-0.3.3-ab0b1e981e1749bf59736cf7ebe25cfc9f949c15-integrity/node_modules/@apideck/better-ajv-errors/package.json",
    "readmeFilename": "README.md",
    "readme": "[![npm (scoped)](https://img.shields.io/npm/v/@apideck/better-ajv-errors?color=brightgreen)](https://npmjs.com/@apideck/better-ajv-errors) [![npm](https://img.shields.io/npm/dm/@apideck/better-ajv-errors)](https://npmjs.com/@apideck/better-ajv-errors) [![GitHub Workflow Status](https://img.shields.io/github/workflow/status/apideck-libraries/better-ajv-errors/CI)](https://github.com/apideck-libraries/better-ajv-errors/actions/workflows/main.yml?query=branch%3Amain++)\n\n# @apideck/better-ajv-errors 👮‍♀️\n\n> Human-friendly JSON Schema validation for APIs\n\n\n- Readable and helpful [ajv](https://github.com/ajv-validator/ajv) errors\n- API-friendly format\n- Suggestions for spelling mistakes\n- Minimal footprint: 1.56 kB (gzip + minified)\n\n![better-ajv-errors output Example](https://user-images.githubusercontent.com/8850410/118274790-e0529e80-b4c5-11eb-8188-9097c8064c61.png)\n\n## Install\n\n```bash\n$ yarn add @apideck/better-ajv-errors\n```\n\nor\n\n```bash\n$ npm i @apideck/better-ajv-errors\n```\n\nAlso make sure that you've installed [ajv](https://www.npmjs.com/package/ajv) at version 8 or higher.\n\n## Usage\n\nAfter validating some data with ajv, pass the errors to `betterAjvErrors`\n\n```ts\nimport Ajv from 'ajv';\nimport { betterAjvErrors } from '@apideck/better-ajv-errors';\n\n// Without allErrors: true, ajv will only return the first error\nconst ajv = new Ajv({ allErrors: true });\n\nconst valid = ajv.validate(schema, data);\n\nif (!valid) {\n  const betterErrors = betterAjvErrors({ schema, data, errors: ajv.errors });\n}\n```\n\n## API\n\n### betterAjvErrors\n\nFunction that formats ajv validation errors in a human-friendly format.\n\n#### Parameters\n\n- `options: BetterAjvErrorsOptions`\n  - `errors: ErrorObject[] | null | undefined` Your ajv errors, you will find these in the `errors` property of your ajv instance (`ErrorObject` is a type from the ajv package).\n  - `data: Object` The data you passed to ajv to be validated.\n  - `schema: JSONSchema` The schema you passed to ajv to validate against.\n  - `basePath?: string` An optional base path to prefix paths returned by `betterAjvErrors`. For example, in APIs, it could be useful to use `'{requestBody}'` or `'{queryParemeters}'` as a basePath. This will make it clear to users where exactly the error occurred.\n\n#### Return Value\n\n- `ValidationError[]` Array of formatted errors (properties of `ValidationError` below)\n  - `message: string` Formatted error message\n  - `suggestion?: string` Optional suggestion based on provided data and schema\n  - `path: string` Object path where the error occurred (example: `.foo.bar.0.quz`)\n  - `context: { errorType: DefinedError['keyword']; [additionalContext: string]: unknown }` `errorType` is `error.keyword` proxied from `ajv`. `errorType` can be used as a key for i18n if needed. There might be additional properties on context, based on the type of error.\n\n## Related\n\n- [atlassian/better-ajv-errors](https://github.com/atlassian/better-ajv-errors) was the inspiration for this library. Atlassian's library is more focused on CLI errors, this library is focused on developer-friendly API error messages.\n",
    "licenseText": "MIT License\n\nCopyright (c) 2021 Apideck\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@apideck/better-ajv-errors/-/better-ajv-errors-0.3.3.tgz#ab0b1e981e1749bf59736cf7ebe25cfc9f949c15",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@apideck/better-ajv-errors/-/better-ajv-errors-0.3.3.tgz",
    "hash": "ab0b1e981e1749bf59736cf7ebe25cfc9f949c15",
    "integrity": "sha512-9o+HO2MbJhJHjDYZaDxJmSDckvDpiuItEsrIShV0DXeCshXWRHhqYyU/PKHMkuClOmFnZhRd6wzv4vpDu/dRKg==",
    "registry": "npm",
    "packageName": "@apideck/better-ajv-errors",
    "cacheIntegrity": "sha512-9o+HO2MbJhJHjDYZaDxJmSDckvDpiuItEsrIShV0DXeCshXWRHhqYyU/PKHMkuClOmFnZhRd6wzv4vpDu/dRKg== sha1-qwsemB4XSb9Zc2z36+Jc/J+UnBU="
  },
  "registry": "npm",
  "hash": "ab0b1e981e1749bf59736cf7ebe25cfc9f949c15"
}